{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"in",
				"inc\t#include <…>"
			],
			[
				"string",
				"stringstream"
			],
			[
				"pu",
				"push_back\tvoid push_back(value_type &&__x)"
			],
			[
				"set",
				"set_standard"
			],
			[
				"get",
				"get_standard"
			],
			[
				"clas",
				"class_\tclass"
			],
			[
				"inc",
				"inc\t#include <…>"
			],
			[
				"n",
				"n"
			],
			[
				"push",
				"push_back\tvoid push_back(value_type &&__x)"
			],
			[
				"pus",
				"push_back\tvoid push_back(const value_type &__x)"
			],
			[
				"int",
				"integers"
			],
			[
				"s",
				"assign\tstd::basic_string<char> & assign(initializer_list<char> __l)"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\nusing namespace std;\n\n\nstatic const string[] \n\nint main() {\n\t\n\tstring in;\n\tstringstream ss;\n\tint hour, minute;\n\tchar ch;\n\n\tcin >> in;\n\n\tss.str(in);\n\tss >> hour >> ch >> minute;\n\n\tcout << \"Hour: \" << hour << endl;\n\tcout << \"Minute: \" << minute << endl;\n\n\n\n}\n",
			"file": "#321 [Easy] Talking Clock/Main.cpp",
			"file_size": 328,
			"file_write_time": 131654523443626160,
			"settings":
			{
				"buffer_size": 352,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 244.0,
		"last_filter": "indent",
		"selected_items":
		[
			[
				"indent",
				"SublimeCodeIntel: Disable Live Autocompletion"
			],
			[
				"reindent",
				"Indentation: Reindent Lines"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"easyclang",
				"EasyClangComplete: Open completion triggers location"
			],
			[
				"sublimelinter",
				"Preferences: SublimeLinter Key Bindings"
			],
			[
				"sublimecode",
				"SublimeCodeIntel: Reset"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"satisy",
				"Package Control: Satisfy Dependencies"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"syntax c++",
				"Set Syntax: C++"
			],
			[
				"starting",
				"Build With: C++ - Starting Kit"
			],
			[
				"kit",
				"Build With: C++ - Starting Kit"
			],
			[
				"view",
				"PackageResourceViewer: Open Resource"
			],
			[
				"if",
				"Snippet: If Condition"
			],
			[
				"snippet",
				"Snippet: if(…) else"
			],
			[
				"instla",
				"Package Control: Install Package"
			],
			[
				"clang for",
				"Clang Format: Select Style"
			],
			[
				"clang form",
				"Clang Format: Format Selection"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Lorem ipsum"
			],
			[
				"viewer",
				"PackageResourceViewer: Open Resource"
			],
			[
				"snippet:",
				"Snippet: Read File Into Vector"
			],
			[
				"snippe",
				"Snippet: std::map"
			],
			[
				"make",
				"Build With: Make"
			],
			[
				"Build",
				"Build With: Make - Clean"
			],
			[
				"synt",
				"Set Syntax: C++"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"bui",
				"Build With: Make - Clean"
			],
			[
				"syntax",
				"Set Syntax: C++"
			],
			[
				"emmet",
				"Set Syntax: Emmet"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Satisfy Dependencies"
			],
			[
				"subl",
				"SublimeCodeIntel: Reset"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"easy",
				"Package Control: Satisfy Dependencies"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 488.0
	},
	"console":
	{
		"height": 312.0,
		"history":
		[
			"ls",
			"clear",
			"./Arrays.o",
			"./"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/benmandude/Programming/Daily_Programmer",
		"/home/benmandude/Programming/Daily_Programmer/#321 [Easy] Talking Clock",
		"/home/benmandude/Programming/Daily_Programmer/#352 [Easy] Making Imgur-style Links"
	],
	"file_history":
	[
		"/home/benmandude/Programming/C++HR/StringStream.cpp",
		"/home/benmandude/Programming/C++HR/String.cpp",
		"/home/benmandude/Programming/Daily_Programmer/Challenge #352 [Easy] Making Imgur-style Links/Main.cpp",
		"/home/benmandude/Programming/Daily_Programmer/Challenge #354 [Easy] Integer Complexity 1/Main.cpp",
		"/home/benmandude/Programming/C++HR/Class_Objects.cpp",
		"/home/benmandude/Programming/C++HR/Class.cpp",
		"/home/benmandude/Programming/C++HR/Arrays.cpp",
		"/home/benmandude/Programming/C++HR/Structs.cpp",
		"/home/benmandude/.codeintel/codeintel.log",
		"/home/benmandude/.config/sublime-text-3/Packages/SublimeCodeIntel/Default (Linux).sublime-mousemap",
		"/home/benmandude/Programming/C++HR/If_Conditional.cpp",
		"/home/benmandude/Programming/C++HR/AttributeParser.cpp",
		"/home/benmandude/.config/sublime-text-3/Packages/C++/C++ Single File.sublime-build",
		"/home/benmandude/Programming/C++HR/Pointer2.cpp",
		"/home/benmandude/Programming/C++HR/Function.cpp",
		"/home/benmandude/Programming/C++HR/Variable_Arrays.cpp",
		"/home/benmandude/Programming/C++HR/For_Loop.cpp",
		"/home/benmandude/Programming/C++HR/Makefile",
		"/home/benmandude/Programming/StringStream.cpp",
		"/home/benmandude/Programming/AttributeParser.cpp",
		"/home/benmandude/Programming/AttributeParser",
		"/home/benmandude/Programming/Makefile",
		"/home/benmandude/.config/sublime-text-3/Packages/ClangAutoComplete/ClangAutoComplete.sublime-settings",
		"/home/benmandude/Programming/Pointer.cpp",
		"/home/benmandude/Programming/Arrays.cpp",
		"/home/benmandude/Programming/Curling.cpp",
		"/home/benmandude/Programming/String.cpp",
		"/home/benmandude/Programming/BasicTypes.c",
		"/home/benmandude/Programming/Variable_Arrays.c",
		"/home/benmandude/Programming/Arrays.c",
		"/home/benmandude/Programming/Curling.c",
		"/home/benmandude/Programming/Function.c",
		"/home/benmandude/Programming/Pointer.c",
		"/home/benmandude/Programming/Pointer2.c",
		"/home/benmandude/Programming/Hello World C++/HelloWorld.c",
		"/home/benmandude/Programming/For_Loop.c",
		"/home/benmandude/.gnome2/accels/nemo",
		"/home/benmandude/Programming/primes.c"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "#321 [Easy] Talking Clock/Main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 352,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppBuilder":
	{
		"height": 231.0
	},
	"output.SublimeLinter":
	{
		"height": 102.0
	},
	"output.exec":
	{
		"height": 239.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 423.0
	},
	"pinned_build_system": "",
	"project": "Daily_Programmer.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"strin",
				"StringStream.cpp"
			],
			[
				"",
				"String.cpp"
			],
			[
				"str",
				"String.cpp"
			],
			[
				"if",
				"If_Conditional.cpp"
			],
			[
				"for",
				"For_Loop.cpp"
			],
			[
				"va",
				"Variable_Arrays.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Programming/30DoC.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
